@model D_Squared.Web.Models.SpreadHourSearchViewModel

@section Scripts{
    <script src="~/App_Scripts/SpreadHour/SearchInit.js" type="text/javascript"></script>
}

<div class="jumbotron" style="background-image: url('/Content/images/lightwood-bg.jpg'); padding-bottom:5px; padding-top:20px; margin-bottom:10px">
    <div style="max-width:500px; display: block; margin: 0 auto;">
        <img src="~/Content/images/millers_d2_logo.png" style="max-width:500px;" />
    </div>
    <div class="text-center" style="display: block; margin: 0 auto; max-width:500px">
        <h2>Spread Hours Search</h2>
        <p class="lead">
            Employee: @Model.EmployeeInfo.FirstName @Model.EmployeeInfo.LastName
            <br />
            <br />
            Access Time: @DateTime.Now.ToLocalTime().ToString()
            <br />
            <br />
        </p>
    </div>
</div>

<br />
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LocationSelectList, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SearchDTO.SelectedLocation, Model.LocationSelectList, htmlAttributes: new { @class = "locationSelect form-control select2-single select2-hidden-accessible" })
                        @Html.ValidationMessageFor(model => model.SearchDTO.SelectedLocation, string.Empty, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SearchDTO.StartDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="input-group col-md-8">
                            @Html.EditorFor(model => model.SearchDTO.StartDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                            <span class="input-group-addon"> to </span>
                            @Html.EditorFor(model => model.SearchDTO.EndDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input name="action:Search" type="submit" value="Search" class="btn btn-dsquared" />
                    </div>
                </div>
            </div>
        </div>
    </div>


    <hr />

    if (Model.SearchResults.Count > 0)
    {
        <table class="table table-striped table-bordered table-responsive">
            <caption class="caption">
                Total Items: @Model.SearchResults.Count()

                <span style="float: right; margin-right: 5px;"><input name="action:ExportCSV" type="submit" value="Export CSV" class="btn btn-success btn-xs" /></span>
                <span style="float: right; margin-right: 5px;"><input name="action:ExportByDayCSV" type="submit" value="Export CSV by Day" class="btn btn-success btn-xs" /></span>
            </caption>
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().SpreadHour.StoreNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().SpreadHour.BusinessDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().SpreadHour.EmployeeName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().MinimumWage.MinWage)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().SpreadHour.Job)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().SpreadHour.FirstClockIn)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().SpreadHour.LastClockOut)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().SpreadHour.TotalHours)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().SpreadHour.SpreadHours)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().SpreadHourPay)
                    </th>
                </tr>
            </thead>
            <tbody>

                @{
                    decimal totalSpreadHours = 0;
                    decimal totalSpreadHourPay = 0;

                    foreach (var result in Model.SearchResults)
                    {
                        totalSpreadHours += (decimal)result.SpreadHour.SpreadHours;
                        totalSpreadHourPay += (decimal)result.SpreadHourPay;

                        <tr>
                            <td>
                                @Html.DisplayFor(model => result.SpreadHour.StoreNumber)
                            </td>
                            <td>
                                @result.SpreadHour.BusinessDate.ToShortDateString()
                            </td>
                            <td>
                                @Html.DisplayFor(model => result.SpreadHour.EmployeeName)
                            </td>
                            <td>
                                @result.MinimumWage.MinWage.ToString("C")
                            </td>
                            <td>
                                @Html.DisplayFor(model => result.SpreadHour.Job)
                            </td>
                            <td>
                                @result.SpreadHour.FirstClockIn.ToShortTimeString()
                            </td>
                            <td>
                                @result.SpreadHour.LastClockOut.ToShortTimeString()
                            </td>
                            <td>
                                @Html.DisplayFor(model => result.SpreadHour.TotalHours)
                            </td>
                            <td>
                                @Html.DisplayFor(model => result.SpreadHour.SpreadHours)
                            </td>
                            <td>
                                @result.SpreadHourPay.ToString("C")
                            </td>
                        </tr>
                    }

                    <tr>
                        <td colspan="8">
                            <span style="float:right"><strong><u>Totals:</u></strong></span>
                        </td>
                        <td>
                            <strong>@totalSpreadHours</strong>
                        </td>
                        <td>
                            <strong>@totalSpreadHourPay</strong>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    }
    else
    {
        <p class="text-center">
            <i>No Spread Hours found</i>
        </p>
    }
}
