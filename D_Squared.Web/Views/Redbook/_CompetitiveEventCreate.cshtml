@model D_Squared.Web.Models.CompetitiveEventCreateEditViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
        <div class="modal-dialog" style="width:800px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h3 class="modal-title">Competitive Event Create</h3>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        Opening: @Html.RadioButtonFor(model => model.CompetitiveEvent.EventType, "Opening", htmlAttributes: new { @class = "radio-inline" })
                                        Closing: @Html.RadioButtonFor(model => model.CompetitiveEvent.EventType, "Closing", htmlAttributes: new { @class = "radio-inline" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompetitiveEvent.EventName, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.CompetitiveEvent.EventName, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompetitiveEvent.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.CompetitiveEvent.Date, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" value="CreateCompetitiveEvent" class="btn btn-primary" />
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}
