@model D_Squared.Web.Models.CompetitiveEventCreateEditViewModel

@using (Html.BeginForm("CompetitiveEventCreate", "Redbook", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.CompetitiveEvent.RedbookEntryId)
    @Html.HiddenFor(model => model.CompetitiveEvent.StoreNumber)
    @Html.HiddenFor(model => model.RedbookDate)

    <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
        <div class="modal-dialog" style="width:800px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h3 class="modal-title">Competitive Event Create</h3>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-4">Event Type </label>
                                        <div class="col-md-8">
                                            <div class="custom-control custom-radio custom-control-inline">
                                                @Html.RadioButtonFor(model => model.CompetitiveEvent.EventType, "Opening", htmlAttributes: new { @class = "custom-control-input" })
                                                <label class="custom-control-label">Opening</label>

                                                @Html.RadioButtonFor(model => model.CompetitiveEvent.EventType, "Opening", htmlAttributes: new { @class = "custom-control-input" })
                                                <label class="custom-control-label">Closing</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompetitiveEvent.EventName, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.CompetitiveEvent.EventName, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompetitiveEvent.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.CompetitiveEvent.Date, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompetitiveEvent.Distance, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(model => model.CompetitiveEvent.Distance, Model.DistanceRanges, htmlAttributes: new { @class = "createDistanceSelect form-control select2-single select2-hidden-accessible" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}


<script type="text/javascript">
        $(function () {
            $(".date-picker").datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: "-1:+0",
                dateFormat: 'mm-dd-yy'
            });
        });
</script>