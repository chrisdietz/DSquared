@model D_Squared.Web.Models.TipReportingSearchViewModel

@section Scripts{
    <script src="~/App_Scripts/SalesForecast/SearchInit.js" type="text/javascript"></script>
    <script src="~/App_Scripts/SalesForecast/EditInit.js" type="text/javascript"></script>
}

<div class="jumbotron" style="background-image: url('/Content/images/lightwood-bg.jpg'); padding-bottom:5px; padding-top:20px; margin-bottom:10px">
    <div class="row">
        <div class="col-md-4">
            <div style="max-width:500px; display: block; margin: 0 auto;float:left;">
                <img src="~/Content/images/millers_d2_logo.png" style="max-width:300px;" />
            </div>
        </div>
        <div class="col-md-4">
            <div class="text-center" style="display: block; margin: 0 auto; max-width:500px">
                <h2>Tip Reporting Search</h2>
            </div>
        </div>
        <div class="col-md-4">
            <div class="text-center" style="display: block; margin: 0 auto; max-width:500px">
                <p class="lead">
                    Time: @DateTime.Now.ToLocalTime().ToString()
                    <br />
                    Employee: @Model.EmployeeInfo.FirstName @Model.EmployeeInfo.LastName
                </p>
            </div>
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-12">
        <a data-toggle="modal" href="#helpModal" class="btn btn-dsquared btn-sm" style="float:right; margin-left: 10px;"><i class="fa fa-question-circle" aria-hidden="true"></i></a>
    </div>
    <br />
    <br />
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LocationSelectList, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SearchDTO.SelectedLocation, Model.LocationSelectList, htmlAttributes: new { @class = "locationSelect form-control select2-single select2-hidden-accessible" })
                        @Html.ValidationMessageFor(model => model.SearchDTO.SelectedLocation, string.Empty, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SearchDTO.StartDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="input-group col-md-8">
                            @Html.EditorFor(model => model.SearchDTO.StartDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                            <span class="input-group-addon"> to </span>
                            @Html.EditorFor(model => model.SearchDTO.EndDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SearchDTO.MinimumMakeUpPay, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.SearchDTO.MinimumMakeUpPay, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input name="Search" type="submit" value="Search" class="btn btn-dsquared" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<hr />

@if (Model.SearchResults.Count > 0)
{
    <table class="table table-striped table-bordered table-responsive">
        <caption class="caption">
            Total Items: @Model.SearchResults.Count()
        </caption>
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().StoreNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().FiscalWeekEnding)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().EmployeeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().JobName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().RegularHours)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().OvertimeHours)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().StateTipCredit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().TotalTipCredit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().TipsEarned)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SearchResults.FirstOrDefault().MakeUpPay1)
                </th>
            </tr>
        </thead>
        <tbody>

            @{
                decimal totalRegHours = 0;
                decimal totalOverHours = 0;
                decimal totalStateTip = 0;
                decimal totalTipCredit = 0;
                decimal totalTipsEarned = 0;
                decimal totalMakeupPay = 0;

                foreach (var result in Model.SearchResults)
                {
                    totalRegHours += (decimal)result.RegularHours;
                    totalOverHours += (decimal)result.OvertimeHours;
                    totalStateTip += (decimal)result.StateTipCredit;
                    totalTipCredit += (decimal)result.TotalTipCredit;
                    totalTipsEarned += (decimal)result.TipsEarned;
                    totalMakeupPay += (decimal)result.MakeUpPay1;

                    <tr>
                        <td>
                            @Html.DisplayFor(model => result.StoreNumber)
                        </td>
                        <td>
                            @result.FiscalWeekEnding.ToShortDateString()
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.EmployeeName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.JobName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.RegularHours)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.OvertimeHours)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.StateTipCredit)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.TotalTipCredit)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.TipsEarned)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.MakeUpPay1)
                        </td>
                    </tr>
                }

                <tr>
                    <td colspan="4">
                        <span style="float:right"><strong><u>Totals:</u></strong></span>
                    </td>
                    <td>
                        <strong>@totalRegHours</strong>
                    </td>
                    <td>
                        <strong>@totalOverHours</strong>
                    </td>
                    <td>
                        <strong>@totalStateTip</strong>
                    </td>
                    <td>
                        <strong>@totalTipCredit</strong>
                    </td>
                    <td>
                        <strong>@totalTipsEarned</strong>
                    </td>
                    <td>
                        <strong>@totalMakeupPay</strong>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}
else
{
    <p class="text-center">
        <i>No Make Up Pay found for this week</i>
    </p>
}

<!--must explicitly define the controller and action and pageHeaderKey. PageHeaderKey can be found in HelpDocument.cs-->
@{Html.RenderAction("ModalDetails", "Home", new { @controller = "TipReporting", @action = "Search", @pageHeaderKey = "TipReportSearch" });}