@model D_Squared.Web.Models.TipReportingViewModel

<div class="jumbotron" style="background-image: url('/Content/images/lightwood-bg.jpg'); padding-bottom:5px; padding-top:20px; margin-bottom:10px">
    <div class="row">
        <div class="col-md-4">
            <div style="max-width:500px; display: block; margin: 0 auto;float:left;">
                <img src="~/Content/images/millers_d2_logo.png" style="max-width:300px;" />
            </div>
        </div>
        <div class="col-md-4">
            <div class="text-center" style="display: block; margin: 0 auto; max-width:500px">
                <h2>Tip Reporting</h2>
                <p class="lead">
                    Restaurant: <strong><u>@Model.EmployeeInfo.StoreNumber</u></strong>
                </p>
            </div>
        </div>
        <div class="col-md-4">
            <div class="text-center" style="display: block; margin: 0 auto; max-width:500px">
                <p class="lead">
                    Time: @Model.AccessTime.ToLocalTime().ToString()
                    <br />
                    Employee: @Model.EmployeeInfo.FirstName @Model.EmployeeInfo.LastName
                </p>
            </div>
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-12">
        <a data-toggle="modal" href="#helpModal" class="btn btn-dsquared btn-sm" style="float:right; margin-left: 10px;"><i class="fa fa-question-circle" aria-hidden="true"></i></a>
    </div>
    <br />
    <br />
</div>
<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            @if (Model.CurrentWeekFlag)
            {
                @Html.ActionLink("Previous two Weeks", "PreviousWeek", "TipReporting", null, new { @class = "btn btn-dsquared btn-xs" })
            }
            else
            {
                @Html.ActionLink("Current Week", "Index", "TipReporting", null, new { @class = "btn btn-dsquared btn-xs" })
            }
        </div>
    </div>
</div>

@if (Model.MakeUpPayList.Count > 0)
{
    <table class="table table-striped table-bordered table-responsive">
        <caption class="caption">
            Total Items: @Model.MakeUpPayList.Count()
        </caption>
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.MakeUpPayList.FirstOrDefault().FiscalWeekEnding)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MakeUpPayList.FirstOrDefault().EmployeeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MakeUpPayList.FirstOrDefault().JobName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MakeUpPayList.FirstOrDefault().RegularHours)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MakeUpPayList.FirstOrDefault().OvertimeHours)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MakeUpPayList.FirstOrDefault().StateTipCredit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MakeUpPayList.FirstOrDefault().TotalTipCredit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MakeUpPayList.FirstOrDefault().TipsEarned)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MakeUpPayList.FirstOrDefault().MakeUpPay1)
                </th>
            </tr>
        </thead>
        <tbody>
            @{
                decimal totalRegHours = 0;
                decimal totalOverHours = 0;
                decimal totalStateTip = 0;
                decimal totalTipCredit = 0;
                decimal totalTipsEarned = 0;
                decimal totalMakeupPay = 0;

                foreach (var result in Model.MakeUpPayList)
                {
                    totalRegHours += (decimal)result.RegularHours;
                    totalOverHours += (decimal)result.OvertimeHours;
                    totalStateTip += (decimal)result.StateTipCredit;
                    totalTipCredit += (decimal)result.TotalTipCredit;
                    totalTipsEarned += (decimal)result.TipsEarned;
                    totalMakeupPay += (decimal)result.MakeUpPay1;

                    <tr>
                        <td>
                            @result.FiscalWeekEnding.ToShortDateString()
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.EmployeeName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.JobName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.RegularHours)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.OvertimeHours)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.StateTipCredit)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.TotalTipCredit)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.TipsEarned)
                        </td>
                        <td>
                            @Html.DisplayFor(model => result.MakeUpPay1)
                        </td>
                    </tr>
                }

                <tr>
                    <td colspan="3">
                        <span style="float:right"><strong><u>Totals:</u></strong></span>
                    </td>
                    <td>
                        <strong>@totalRegHours</strong>
                    </td>
                    <td>
                        <strong>@totalOverHours</strong>
                    </td>
                    <td>
                        <strong>@totalStateTip</strong>
                    </td>
                    <td>
                        <strong>@totalTipCredit</strong>
                    </td>
                    <td>
                        <strong>@totalTipsEarned</strong>
                    </td>
                    <td>
                        <strong>@totalMakeupPay</strong>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}
else
{
    <p class="text-center">
        <i>No Make Up Pay found for this week</i>
    </p>
}
<!--must explicitly define the controller and action and pageHeaderKey. PageHeaderKey can be found in HelpDocument.cs-->
@{Html.RenderAction("ModalDetails", "Home", new { @controller = "TipReporting", @action = "Index", @pageHeaderKey = "TipReportView" });}